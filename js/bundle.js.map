{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/modules/calc.js","webpack:///./js/modules/cards.js","webpack:///./js/modules/forms.js","webpack:///./js/modules/modal.js","webpack:///./js/modules/slider.js","webpack:///./js/modules/tabs.js","webpack:///./js/modules/timer.js","webpack:///./js/script.js","webpack:///./js/services/services.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,K;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,K;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,S;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,a;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACe,mEAAI,E;;;;;;;;;;;;ACnLnB;AAAA;AAAA;AACgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS,SAAS,SAAS;AACvD,kDAAkD,cAAc;AAChE,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI,sEAAW;AACf;AACA;AACA,yEAAyE,iC;AACzE,uBAAuB,iCAAiC;AACxD;AACA;AACA,SAAS;AACT,KAAK;;;AAGL;AACA;;AAEA;AACe,oEAAK,E;;;;;;;;;;;;ACxFpB;AAAA;AAAA;AAAA;AAC6C;AAC7C;AACgD;;AAEhD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,sEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,wDAAS;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yDAAU;AACtB,SAAS;AACT;AACA;AACA;;AAEA;AACe,oEAAK,E;;;;;;;;;;;;ACxHpB;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,sD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;;AAIL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACe,oEAAK,EAAC;AACrB;AACmB;AACnB;;;;;;;;;;;;;ACvFA;AAAA,iBAAiB,gFAAgF;AACjG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA,mCAAmC,WAAW;AAC9C,K;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,WAAW;AACzD,S;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,S;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;AACA;;AAEA;AACA,qDAAqD,OAAO;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,S;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD,OAAO;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;;AAEhE;AACA;;AAEA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA;AACe,qEAAM,E;;;;;;;;;;;;ACtPrB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;;AAEA;AACe,mEAAI,E;;;;;;;;;;;;AC9DnB;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACe,oEAAK,E;;;;;;;;;;;;ACxFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACmC;AACC;AACA;AACA;AACF;AACE;AACE;AACI;AAC1C;AACA;AACA;AACA;AACA,0CAA0C,gEAAS;;AAEnD;AACA,IAAI,6DAAI;AACR,IAAI,8DAAK;AACT,IAAI,8DAAK;AACT,IAAI,8DAAK;AACT,IAAI,6DAAI;AACR,IAAI,8DAAK;AACT,IAAI,+DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,IAAI,YAAY,WAAW;AACtE;;AAEA;AACA;AACA;AACqB","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/script.js\");\n","function calc()\r\n{\r\n    // calc starts\r\n\r\n    // получаем тег спан в классе \r\n    const result = document.querySelector('.calculating__result span');\r\n    // временные переменные\r\n    let sex, height, weight, age, ratio;\r\n\r\n    // проверка пола, если пользователь был уже и кликал,если нет то ставим по умолчанию\r\n    if (localStorage.getItem('sex')) \r\n    {\r\n        sex = localStorage.getItem('sex');\r\n    } \r\n    else \r\n    {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    // // проверка рициона питания, если пользователь был уже и кликал,если нет то ставим по умолчанию\r\n    if (localStorage.getItem('ratio')) \r\n    {\r\n        ratio = localStorage.getItem('ratio');\r\n    } \r\n    else \r\n    {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    // ф-я просчета для ж и м\r\n    function calcTotal() \r\n    {\r\n        // проверка что если хоть одно поле не заполненно\r\n        if (!sex || !height || !weight || !age || !ratio) \r\n        {\r\n            result.textContent = '____';\r\n            return;\r\n        }\r\n\r\n        // проверка м или ж\r\n        if (sex === 'female') \r\n        {\r\n            // ко-во калорий округленное\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } \r\n        else \r\n        {\r\n            // ко-во калорий округленное\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    // запуск ф-и\r\n    calcTotal();\r\n\r\n    // ф-я запоминания выбора пользователя\r\n    function initLocalSettings(selector, activeClass) {\r\n        // обращаемся к элментам\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        // проходим форычем \r\n        elements.forEach(elem => {\r\n            // у каждого элемента удала=яем не активный класс\r\n            elem.classList.remove(activeClass);\r\n            // проверяем если запись равно айди добавляем класс активности\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) \r\n            {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            // проверяем если запись равно атрибуту добавляем класс активности\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) \r\n            {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    // запуск ф-и где #gender div обращение к всем тегам\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    // запуск ф-и где calculating__choose_big div обращение к всем тегам\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    // ф-я назначения пола и кофициэнта активности и активного класса при клике пользователя\r\n    function getStaticInformation(selector, activeClass) {\r\n        // получаем все дивы в классе котрый передадим\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        // вытягиваем все дивы\r\n        elements.forEach(elem => {\r\n            // при клике на див из класса\r\n            elem.addEventListener('click', (event) => {\r\n                // если клик пользователя на див с атрибутом \r\n                if (event.target.getAttribute('data-ratio')) \r\n                {\r\n                    // записываем нажатый див с атрибутом в переменую\r\n                    ratio = +event.target.getAttribute('data-ratio');\r\n                    // записываем на какой див с атрибутом кликнул пользователь\r\n                    localStorage.setItem('ratio', +event.target.getAttribute('data-ratio'));\r\n                }\r\n                // если нет\r\n                else \r\n                {\r\n                    // записываем див с атрибутом пола\r\n                    sex = event.target.getAttribute('id');\r\n                    // записываем какой пол пользователь выбрал\r\n                    localStorage.setItem('sex', event.target.getAttribute('id'));\r\n                }\r\n    \r\n                // проходим форычем и удаляем активный класс\r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n                \r\n                // добавляем активный класс нажатому диву\r\n                event.target.classList.add(activeClass);\r\n    \r\n                // ф-я подчнета\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    // запуск ф-и с выбором пола,и вытакскиваем класс активности где #gender div обращение к всем тегам\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    // запуск ф-и с выбором активности, и вытакскиваем класс активности где .calculating__choose_big div обращение к всем тегам\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    // ф-я  записи физических данных от пользователя\r\n    function getDynamicInformation(selector) {\r\n        // получаем элемент\r\n        const input = document.querySelector(selector);\r\n\r\n        // делаем проверку чтоб пользоваетель вводил только цифры\r\n        input.addEventListener('input', () => {\r\n            // если не цифра\r\n            if (input.value.match(/\\D/g)) \r\n            {\r\n                // то красим в красный\r\n                input.style.border = \"1px solid red\";\r\n            } \r\n            else \r\n            {\r\n                // даем браузеру применить свои свойства\r\n                input.style.border = '';\r\n            }\r\n        });\r\n\r\n        // отслеживаем событие\r\n        input.addEventListener('input', () => {\r\n            // проверяем айди атрибут элемента\r\n            switch(input.getAttribute('id')) {\r\n                case \"height\":\r\n                    height = +input.value;\r\n                    break;\r\n                case \"weight\":\r\n                    weight = +input.value;\r\n                    break;\r\n                case \"age\":\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            // запуск для пересчета при изменении полей инпута\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    // ввод с длиной\r\n    getDynamicInformation('#height');\r\n    // ввод с шириной \r\n    getDynamicInformation('#weight');\r\n    // запуск с возрастом\r\n    getDynamicInformation('#age');\r\n    // calc end\r\n}\r\n\r\n// экспортируем\r\nexport default calc;","// импортируем ф-ю из сервеса\r\nimport{getResource} from '../services/services';\r\n\r\nfunction cards()\r\n{\r\n    //class Карточек меню start\r\n    class menuEat\r\n    {\r\n        /**\r\n         * \r\n         * @param {string} src - путь картинки\r\n         * @param {string} alt - название картинки\r\n         * @param {string} subtitle - название карточки меню\r\n         * @param {string} descr - описание меню\r\n         * @param {number} price - цена меню\r\n         * @param {number} priceDollar - цена доллара\r\n         * @param {...array} classes - rest оператор\r\n         * @param {string} parentSelector - элемерты поиска\r\n         */\r\n        constructor(src, alt, subtitle, descr, price, parentSelector, ...classes)\r\n        {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.subtitle = subtitle;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.parentSelector = document.querySelector(parentSelector);\r\n            this.classes = classes;\r\n            this.priceDollar = 26.80;\r\n            this.transerUAH();\r\n            this.renderCart();\r\n        }\r\n\r\n        // метод конвертирования цены в гривне в доллар\r\n        transerUAH()\r\n        {\r\n            this.price = Math.floor(this.price * this.priceDollar);\r\n        }\r\n\r\n        // метод создания какрточки\r\n        renderCart()\r\n        {\r\n            let elem = document.createElement('div');\r\n            // проверяем были ли переданы значения в массив\r\n            if(this.classes.length === 0)\r\n            {\r\n                // если пустой то создаем класс по  умолчанию\r\n                this.classes  = 'menu__item';\r\n                // добавляем класс созданому диву\r\n                elem.classList.add(this.classes);\r\n            }\r\n            else\r\n            {\r\n                // добавляем каждому элементу\r\n                this.classes.forEach(className => elem.classList.add(className));\r\n            }\r\n            elem.innerHTML = `\r\n                <img src=\"${this.src}\" alt=\"${this.alt}\">\r\n                <h3 class=\"menu__item-subtitle\">${this.subtitle}\"</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n\r\n            // вставляем после элемента переданого в класс\r\n            this.parentSelector.append(elem);\r\n        }\r\n    }\r\n\r\n    // ф-я запроса fecth промиса\r\n    getResource('http://localhost:3000/menu')\r\n    // обрабатываем    \r\n    .then(data => {\r\n        // достаем обьекты из массива, и эти обьекты деструктиризируем  {img, altimg, title, descr, price}   \r\n        data.forEach(({img, altimg, title, descr, price}) => {\r\n            // передаем в обьект класса данные деструктиризируемые из массива\r\n            new menuEat(img, altimg, title, descr, price, \".menu .container\");\r\n        });\r\n    });\r\n\r\n\r\n    //class Карточек мею end\r\n}\r\n\r\n// экспортируем\r\nexport default cards;","// импортируем 2 ф-и из файла modal.js так как они используються в этом файле\r\nimport{closeModal, openModal} from './modal';\r\n//инпортируем ф-ю форм дата\r\nimport{postAndData} from '../services/services';\r\n\r\nfunction forms(formSelector, modalTimerId)\r\n{\r\n    // AJAX  start\r\n\r\n    // берем все формы с страницы в псевдомассив\r\n    const forms = document.querySelectorAll(formSelector);\r\n    \r\n    // создаем обьект с выводм статуса\r\n    const message = \r\n    {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    // достаем каждую форму из псевдомассива\r\n    forms.forEach(item => {\r\n        // вызов ф-и и передача форм\r\n        postData(item);\r\n    });\r\n\r\n    //  обработки форм\r\n    function postData(form) \r\n    {\r\n        // при собитии отправить\r\n        form.addEventListener('submit', (event) => {\r\n            // сообщаем что событие не обработанно\r\n            event.preventDefault();\r\n\r\n            // создаем img куда будем выводить \r\n            let statusMessage = document.createElement('img');\r\n            // добавляем путь картинки\r\n            statusMessage.src = message.loading;;\r\n            // добавляем стили картинке\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n\r\n            // вставляем после формы\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n            \r\n            // конструктор обьект с формами\r\n            const formData = new FormData(form);\r\n            \r\n            // создаем обьект для превращения Конструктора FormData в JSON формат\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n            \r\n            // ф- я вызова промиса fecht \r\n            postAndData('http://localhost:3000/requests', json)\r\n            /*\r\n            *  // конвертируем json формат в текст\r\n            *  // .then(data => data.text())\r\n            */\r\n            // // обрабатываем промис в случае успеха\r\n            .then(data => {\r\n                console.log(data);\r\n                // ответ что удачно отправил\r\n                showThanksModal(message.success);\r\n                // удаляем собщение\r\n                statusMessage.remove();\r\n            })\r\n            // обрабатываем промис в случае неудачи\r\n            .catch(() => {\r\n                console.log(555);\r\n                // если не успешен оповещаем\r\n                showThanksModal(message.failure);\r\n            })\r\n            // после выпонения одного из результатов\r\n            .finally(() => {\r\n                // очищаем форму\r\n                form.reset();\r\n            });\r\n        });\r\n    }\r\n\r\n    // ф-я вывода ответа на запрос пользователю\r\n    function showThanksModal(message) \r\n    {\r\n        // получаем модельное окно куда будем выводить\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        // добавляем класс скрыть\r\n        prevModalDialog.classList.add('hide');\r\n        // показываем окно\r\n        openModal('.modal', modalTimerId);\r\n\r\n        // создаем элемент\r\n        const thanksModal = document.createElement('div');\r\n        // добавляем существующий класс\r\n        thanksModal.classList.add('modal__dialog');\r\n        // вставляем в этот элемент элемент с атрибутом закрытия\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n        // вставляем созданный элемент после\r\n        document.querySelector('.modal').append(thanksModal);\r\n        // ф-я изменения окна,удаляет о выводк отправке, делает окно прежним, и закрывает\r\n        setTimeout(() => {\r\n            // удаляем созданный элемент\r\n            thanksModal.remove();\r\n            // возращаем классы те что были\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            // закрываем окно\r\n            closeModal('.modal');\r\n        }, 4000);\r\n    }\r\n    // AJAX end\r\n}\r\n\r\n//экспортируем\r\nexport default forms;","// 2 отдельные ф-я для именованого экспорта так как используються в друглм файле\r\n//ф-я ооткрытия окна\r\nfunction openModal(modalSelect, modalTimerId)\r\n{\r\n    // получаем элемент\r\n    const modal = document.querySelector(modalSelect);\r\n\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide')\r\n    // скрываем скролл для того чтоб не прокручивалась страница\r\n    document.body.style.overflow = 'hidden';\r\n    // очищаем интервал  с проверкой если он есть\r\n    if(modalTimerId)\r\n    {\r\n        clearTimeout(modalTimerId);\r\n    }\r\n}\r\n\r\n\r\n// ф-я закрытия модельного окна\r\nfunction closeModal(modalSelect)\r\n{\r\n    // получаем элемент\r\n    const modal = document.querySelector(modalSelect);    \r\n\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    // снимаем запрет на скролл\r\n    document.body.style.overflow = '';\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelect, modalTimerId)\r\n{\r\n    // Modal start\r\n \r\n    //получаем кнопки\r\n    let modelBtn = document.querySelectorAll(triggerSelector);\r\n    // получаем сам класс окна\r\n    let modal = document.querySelector(modalSelect);\r\n\r\n    //навешуем события при клике на показать, оборачиваем ф-я в каллбэк чтоб при загрузке сразу не срабатывала\r\n    modelBtn.forEach(btn => {\r\n        btn.addEventListener('click', () => openModal(modalSelect, modalTimerId));\r\n    });\r\n\r\n\r\n\r\n    // при клике на подложку закрываем а также если есть атрибут data-close у элемента то тоже закрываем\r\n    modal.addEventListener('click', (event) => {\r\n        // проверяем что клик пользователя был именно на подложку или элемент с атрибутом\r\n        if(event.target === modal || event.target.getAttribute('data-close') == '')\r\n        {\r\n            closeModal(modalSelect);\r\n        }\r\n    });\r\n\r\n    // при нажатии escape\r\n    document.addEventListener('keydown', (event) => {\r\n        // проверяем открыто ли окно\r\n        if(event.code === 'Escape' && modal.classList.contains('show'))\r\n        {\r\n            closeModal(modalSelect);\r\n        }\r\n    });\r\n\r\n\r\n    // вычесляем когда пользователь проскролит страницу до низа\r\n    function showModalScroll()\r\n    {\r\n        // проверяем сколько проскролили пользователь\r\n        if(window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight)\r\n        {\r\n            openModal(modalSelect, modalTimerId);\r\n            // удаляем ф-я показа окна при скролее,чтоб 1 раз показалась\r\n            window.removeEventListener('scroll', showModalScroll);\r\n        }\r\n    }\r\n\r\n    // показываем пользователю окно, при скролле к низу страницы\r\n    window.addEventListener('scroll', showModalScroll);\r\n    //Modal end\r\n}\r\n\r\n// экспортируем\r\nexport default modal;\r\n// делаем именнованый экспорта для файла forms.js так как они так используються\r\nexport {openModal};\r\n// делаем именнованый экспорта для файла forms.js так как они так используються\r\nexport {closeModal};","function slider({containerSlides,slide,nextArr,prevArr,totalCounter,currentCounter,wrapper,field}) \r\n{\r\n    // Slider v2 start\r\n    // отступ\r\n    let offset = 0;\r\n    // индекс слайда для нас с единицы, для жс с нуля\r\n    let slideIndex = 1;\r\n\r\n    // получаем псевдомассив с слайдами\r\n    const slides = document.querySelectorAll(slide),\r\n        // достаем слайдер\r\n        slider = document.querySelector(containerSlides),\r\n        // предыдущий слайд\r\n        prev = document.querySelector(prevArr),\r\n        // последующий слайд\r\n        next = document.querySelector(nextArr),\r\n        // получаем элемент показывающий общее к-во слайдов\r\n        total = document.querySelector(totalCounter),\r\n        // получаем элемент вывода текущего слайда \r\n        current = document.querySelector(currentCounter),\r\n        // получаем обертку слайдера\r\n        slidesWrapper = document.querySelector(wrapper),\r\n        // получаем приминеную ширину к обертке\r\n        width = window.getComputedStyle(slidesWrapper).width,\r\n        // контейнер поле наших слайдеров\r\n        slidesField = document.querySelector(field);\r\n\r\n    // если слайд меньше 10\r\n    if (slides.length < 10) \r\n    {\r\n        // добавляем ноль перед цифрой\r\n        total.textContent = `0${slides.length}`;\r\n        // добавляем перед цифрой индексу\r\n        current.textContent =  `0${slideIndex}`;\r\n    } \r\n    else \r\n    {\r\n        total.textContent = slides.length;\r\n        current.textContent =  slideIndex;\r\n    }\r\n    \r\n    // устаннавливаем ему ширину,на все слайды\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    // ставим в ряд слайды\r\n    slidesField.style.display = 'flex';\r\n    // делаем плавный преход\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    // скрываем все выходящие за границу сладйы с полем\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    // устанавливаем всем слайдам одинаковую ширину\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    // добавляем слайдеру цсс свойство\r\n    slider.style.position = 'relative';\r\n\r\n    // создаем список ол\r\n    const indicators = document.createElement('ol'),\r\n        // создаем массив\r\n        dots = [];\r\n    // добавляем класс\r\n    indicators.classList.add('carousel-indicators');\r\n    // добавляем стили цсс. если добавим в цсс файл то не будет доступа\r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n    // вставляем в слайдер в конец\r\n    slider.append(indicators);\r\n\r\n    // считаем количество слайдеров и создаем такое же количество ли\r\n    for (let i = 0; i < slides.length; i++) \r\n    {\r\n        // создаем тег ли\r\n        const dot = document.createElement('li');\r\n        // добавляем атрибут, начиная с 1\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        // добавляем стили\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n        // \r\n        if (i == 0) \r\n        {\r\n            // делаем не прозразным\r\n            dot.style.opacity = 1;\r\n        }\r\n        // добавляем в ол список ли\r\n        indicators.append(dot);\r\n        // добавляем ли в массив\r\n        dots.push(dot);\r\n    }\r\n\r\n    // ф-я анимации переключения точек слайда\r\n    function arrDots(arr)\r\n    {\r\n        // делаем каждой лишке прозрачность на половину\r\n        arr.forEach(dot => dot.style.opacity = \".5\");\r\n        // делаем видимым ту ли которая равна слайдеру\r\n        arr[slideIndex-1].style.opacity = 1;\r\n    }\r\n\r\n    //ф-я добавления 0 если индекс меньше 10\r\n    function plusZero(count)\r\n    {\r\n        if (count.length < 10) \r\n        {\r\n            // если меньше 10, добавляем ноль перед числом\r\n            return current.textContent =  `0${slideIndex}`;\r\n        } \r\n        else \r\n        {\r\n            return current.textContent =  slideIndex;\r\n        }\r\n    }\r\n\r\n    // ф-я замены не цифр на пустоту\r\n    function replaceToNotNumber(str)\r\n    {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n    //обработка клика\r\n    next.addEventListener('click', () => {\r\n        /**\r\n         * если наш отступ будет равен умноженоое на количество\r\n         * слайдев минус 1, то устанавлюем offset\r\n         * чтоб вернуться в начало\r\n         * обязательно унарный плюс превращаем строку '500px' в число +width.slice(0, width.length - 2)\r\n         */\r\n        if (offset == (replaceToNotNumber(width) * (slides.length - 1))) \r\n        {\r\n            offset = 0;\r\n        } \r\n        else \r\n        {\r\n            // если не последний слайд добавляем смещение\r\n            /**\r\n             * Почему ф-я именно здесь не срабатывает без унарного плюса\r\n             */\r\n            offset += replaceToNotNumber(width); \r\n        }\r\n\r\n        // передаем на сколько нужно здивунуть слайд\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        // если дошли до конца перемещаемся на 1 слайд\r\n        if (slideIndex == slides.length) \r\n        {\r\n            slideIndex = 1;\r\n        }\r\n        // если нет\r\n        else \r\n        {\r\n            slideIndex++;\r\n        }\r\n\r\n        // запуск ф-и\r\n        plusZero(slides);\r\n\r\n        // запуск ф-и\r\n        arrDots(dots);\r\n    });\r\n\r\n    // обработка клика\r\n    prev.addEventListener('click', () => {\r\n        // если мы на ходимся на первом слайде\r\n        if (offset == 0) \r\n        {\r\n            // просчитываем то количество на которое сдвинуть\r\n            offset = replaceToNotNumber(width) * (slides.length - 1);\r\n        } \r\n        else \r\n        {\r\n            // просчитываем то количество на которое сдвинуть\r\n            offset -= replaceToNotNumber(width);\r\n        }\r\n\r\n        // передаем на сколько нужно здивунуть слайд\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        // если мы на 1 слайде, перемещаемся на последний\r\n        if (slideIndex == 1) \r\n        {\r\n            slideIndex = slides.length;\r\n        }\r\n        // если нет\r\n        else \r\n        {\r\n            slideIndex--;\r\n        }\r\n\r\n        // запуск ф-и\r\n        plusZero(slides);\r\n\r\n        // запуск ф-и\r\n        arrDots(dots);\r\n    });\r\n\r\n    // проходимся по массиву\r\n    dots.forEach(dot => {\r\n        // при клике на ли \r\n        dot.addEventListener('click', (e) => {\r\n            //при клике на  ли атрибут равен\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            // переназначаем индекс на индекс ли\r\n            slideIndex = slideTo;\r\n            // просчитываем на сколько нужно сдвинуть слайдер, с помощью регулярки заменяем все не цифры на пустоту\r\n            offset = replaceToNotNumber(width) * (slideTo - 1);\r\n            // сколько нужно сдвинуть\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            // запуск ф-и\r\n            plusZero(slides);\r\n\r\n            // запуск ф-и\r\n            arrDots(dots);\r\n        });\r\n    });\r\n    // Slider v2 end\r\n}\r\n\r\n// экспортируем\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) \r\n{\r\n    // Tabs start\r\n    // стили питания\r\n    let tabs = document.querySelectorAll(tabsSelector),\r\n    // дивы с стилями питания\r\n          tabsContent = document.querySelectorAll(tabsContentSelector),\r\n    // родитель стилей питания\r\n          tabsParent = document.querySelector(tabsParentSelector);\r\n    \r\n    // скрываем дивы с стилями питания\r\n    function hideTabContent() \r\n    {\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n        // убираем класс активности\r\n        tabs.forEach(item => {\r\n            item.classList.remove(activeClass);\r\n        });\r\n    }\r\n\r\n    // возращаем дивы с стилями питания\r\n    function showTabContent(i = 0)\r\n    {\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        // нужному элменту удаляем класс невидимости\r\n        tabsContent[i].classList.remove('hide');\r\n        // возращаем класс активности\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n\r\n    // вызов ф-и с скрытием\r\n    hideTabContent();\r\n    // вызов ф-и с показом только 1 блока\r\n    showTabContent();\r\n\r\n    // обработка клика на родителе стилях питания\r\n    tabsParent.addEventListener('click', (event)=> {\r\n        // для частого использования записываем метод в переменную(клик пользователя)\r\n        const target = event.target;\r\n\r\n        // если при клике, класс равен\r\n        if(target && target.classList.contains(tabsSelector.slice(1)))\r\n        {\r\n            // перебираем массив и сравнимаем с элементом котрый кликнул пользователь\r\n            tabs.forEach((item, i) => {\r\n                if(target == item)\r\n                {\r\n                    // скрываем все остальные и показываем только тот котрый равен\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    // Tabs end\r\n}\r\n\r\n// экспортируем\r\nexport default tabs;","function timer(id, deadLine)\r\n{\r\n    // Timer start\r\n\r\n    // ф-я разницы времени c параметром даты которую мы можем получать в виде строки\r\n    function getTimeRemaining(endTime)\r\n    {\r\n        //от даты которую получили в виде строки,парсим в милисекунды и отнимаем текущюю дату пользователя, получаем разницу\r\n        const t = Date.parse(endTime) - Date.parse(new Date());\r\n        // превращаем разницу в дни\r\n        let days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n        // получаем остаток часов до даты\r\n        let hours = Math.floor((t / (1000 * 60 * 60)) % 24);\r\n        // получаем остаток минут\r\n        let minutes = Math.floor((t / (1000 * 60)) % 60);\r\n        // получаем остаток секунд\r\n        let seconds = Math.floor((t / 1000) % 60);\r\n\r\n        // возращаем обьект с результатами\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n    // ф-я помощник в проверке + подставляет 0 если число < 10\r\n    function helperZero(num)\r\n    {\r\n        if(num >= 0 && num < 10)\r\n        {\r\n            return `0${num}`;\r\n        }\r\n        else  if(num < 0)\r\n        {\r\n            return '00';\r\n        }\r\n        else\r\n        {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    // ф-я вывода на экран, где selector это родительский элемент тайммера\r\n    function setTimeClock(selector, endTime)\r\n    {\r\n        // получаем элементы где распологаеться таймер\r\n        let timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds');\r\n        // запускаем ф-ю вывода через каждую секунду\r\n        let timeInterval = setInterval(upDateClock, 1000);\r\n\r\n        /*для того чтоб убрать баг отображения при перезаругзки \r\n        таймера вызовим ф-и  для установки даты*/\r\n        upDateClock();\r\n\r\n        // расчет времени который остался на данный момент\r\n        function upDateClock()\r\n        {\r\n            // записываем возращаемый объект из ф-и\r\n            let t = getTimeRemaining(endTime);\r\n            \r\n            // выводим на страницу\r\n            days.innerHTML = helperZero(t.days);\r\n            hours.innerHTML = helperZero(t.hours);\r\n            minutes.innerHTML = helperZero(t.minutes);\r\n            seconds.innerHTML = helperZero(t.seconds);\r\n\r\n            // проверяем разницу в милисекундых на исчерпание\r\n            if(t.total <= 0)\r\n            {\r\n                // останавливаем если время вышло\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    // запуск ф-и c элементом поиска и датой окончания таймера\r\n    setTimeClock(id, deadLine);\r\n    // end Timer\r\n}\r\n\r\n// экспортируем\r\nexport default timer;","// импортируем модули\r\nimport tabs  from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport calc from './modules/calc';\r\nimport forms from './modules/forms';\r\nimport slider from './modules/slider';\r\nimport {openModal} from './modules/modal';\r\n// обращение к DOMElementam\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    // глобально для всех, обернутая в каллбэк ф-ю\r\n    // показываем пользователю форму модельного окна при входе через  3 сек\r\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 3000);\r\n\r\n    // вызываем для запуска ф-и\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    modal('[data-model]','.modal', modalTimerId);\r\n    timer('.timer', '2020-09-15');\r\n    cards();\r\n    calc();\r\n    forms('form',modalTimerId);\r\n    slider({\r\n        containerSlides: '.offer__slider',\r\n        slide: '.offer__slide',\r\n        nextArr: '.offer__slider-next',\r\n        prevArr: '.offer__slider-prev',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner'\r\n    });\r\n});\r\n","/*ф-я формирования отправки fecth промиса\r\n    * где url путь\r\n    * где data данные\r\n    * async асинхроно с странице\r\n    * await но ждет пока не отработают методы с ним\r\n    */\r\n   const postAndData = async (url, data) => {\r\n    // переменная fecth промиса\r\n    let res = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n    \r\n    // возрат данных конвертируемых из json формата\r\n    return await res.json();\r\n};\r\n\r\n// ф-я запроса fecth промиса\r\nasync function getResource(url) \r\n{\r\n    // переменная fecth промиса\r\n    let res = await fetch(url);\r\n    \r\n    // проверяем ответ fecth промиса\r\n    if (!res.ok) \r\n    {\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n    \r\n    // если все прошло удачно возращаем данные в обьекте\r\n    return await res.json();\r\n}\r\nexport {postAndData};\r\nexport {getResource};"],"sourceRoot":""}